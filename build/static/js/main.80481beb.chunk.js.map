{"version":3,"sources":["components/BarChart.js","components/RadarChart.js","components/Header.js","App.js","index.js"],"names":["BarChart","data_open","data_low","data_high","data_date","data","labels","datasets","label","borderColor","backgroundColor","height","width","options","maintainAspectRatio","layout","padding","left","right","top","bottom","legend","position","scales","xAxes","type","time","displayFormats","quarter","ticks","fontColor","fontSize","yAxes","RadarChart","borderWidth","Header","company","className","length","format","date","exchange","high","low","close","last","open","volume","App","useState","setLow","setHigh","setOpen","setDate","userInput","setUserInput","setCompany","other","setOther","Base_url","key","getData","json_data","stock_open","stock_high","stock_low","stock_date","static_num_vaibhav","pagination","count","i","push","parseFloat","eod","name","callAPI","a","fetch","response","status","Error","json","data_json","window","alert","callAPI_header","response2","data_json2","onSubmit","e","preventDefault","placeholder","onChange","currentTarget","value","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA8EeA,EA3EE,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAChD,OACI,8BACI,cAAC,OAAD,CACIC,KAAM,CACFC,OAAQF,EACRG,SAAU,CACN,CACIC,MAAO,OACPH,KAAMJ,EACNQ,YAAa,UACbC,gBAAiB,aAErB,CACIF,MAAO,MACPH,KAAMH,EACNO,YAAa,UACbC,gBAAiB,aAErB,CACIF,MAAO,OACPH,KAAMF,EACNM,YAAa,UACbC,gBAAiB,eAI7BC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,QAAS,CACLC,KAAM,EACNC,MAAO,GACPC,IAAK,IACLC,OAAQ,MAGhBC,OAAQ,CACJC,SAAU,SACVhB,OAAQ,CACJU,QAAS,KAGjBO,OAAQ,CACJC,MAAO,CACH,CACIC,KAAM,OACNC,KAAM,CACFC,eAAgB,CACZC,QAAS,aAGjBC,MAAO,CACHC,UAAW,YACXC,SAAU,QAItBC,MAAO,CACH,CACIH,MAAO,CACHC,UAAW,YACXC,SAAU,eC6B/BE,EA9FI,SAAC,GAAmD,IAAjDhC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAA2B,EAAhBC,UAClD,OACI,8BACI,cAAC,MAAD,CACIC,KAAM,CACFC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAC5BC,SAAU,CACN,CACIC,MAAO,OACPH,KAAM,CACFJ,EAAU,IACVA,EAAU,IACVA,EAAU,IACVA,EAAU,IACVA,EAAU,IACVA,EAAU,IAEdQ,YAAa,UACbyB,YAAa,EACbxB,gBAAiB,aAErB,CACIF,MAAO,MACPH,KAAM,CACFH,EAAS,IACTA,EAAS,IACTA,EAAS,IACTA,EAAS,IACTA,EAAS,IACTA,EAAS,IAEbO,YAAa,UACbyB,YAAa,EACbxB,gBAAiB,aAErB,CACIF,MAAO,OACPH,KAAM,CACFF,EAAU,IACVA,EAAU,IACVA,EAAU,IACVA,EAAU,IACVA,EAAU,IACVA,EAAU,IAEdM,YAAa,UACbyB,YAAa,EACbxB,gBAAiB,eAI7BC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACLC,qBAAqB,EAErBC,OAAQ,CACJC,QAAS,CACLC,KAAM,GACNC,MAAO,EACPC,IAAK,IACLC,OAAQ,MAGhBC,OAAQ,CACJC,SAAU,SACVhB,OAAQ,CACJU,QAAS,KAGjBO,OAAQ,CACJC,MAAO,CACH,CACIK,MAAO,CACHC,UAAW,YACXC,SAAU,QAItBC,MAAO,CACH,CACIH,MAAO,CACHC,UAAW,YACXC,SAAU,e,0BC7B/BI,EArDA,SAAC,GAAuB,IAArB9B,EAAoB,EAApBA,KAAM+B,EAAc,EAAdA,QACpB,OACI,qBAAKC,UAAU,YAAf,SACwB,IAAnBD,EAAQE,OACL,sBAAKD,UAAU,UAAf,UACI,oBAAIA,UAAU,SAAd,SAAwBD,IACxB,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sCACU,IACN,+BACI,cAAC,IAAD,CAAQE,OAAO,aAAf,SACKlC,EAAKmC,YAIlB,2CACc,+BAAOnC,EAAKoC,cAE1B,uCACU,qCAAQpC,EAAKqC,WAEvB,sCACS,qCAAQrC,EAAKsC,aAG1B,sBAAKN,UAAU,WAAf,UACI,wCACW,qCAAQhC,EAAKuC,YAGxB,uCACU,qCAAQvC,EAAKwC,WAEvB,uCACU,qCAAQxC,EAAKyC,WAGvB,yCACY,+BAAOzC,EAAK0C,qBAMpC,oBAAIV,UAAU,SAAd,8DCsEDW,G,OAhHH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACPN,EADO,KACFO,EADE,OAEUD,mBAAS,IAFnB,mBAEPP,EAFO,KAEDS,EAFC,OAGUF,mBAAS,IAHnB,mBAGPH,EAHO,KAGDM,EAHC,OAIUH,mBAAS,IAJnB,mBAIPT,EAJO,KAIDa,EAJC,OAKoBJ,mBAAS,IAL7B,mBAKPK,EALO,KAKIC,EALJ,OAMgBN,mBAAS,IANzB,mBAMPb,EANO,KAMEoB,EANF,OAOYP,mBAAS,IAPrB,mBAOPQ,EAPO,KAOAC,EAPA,KAQRC,EAAW,gCACXC,EAAM,mCAENC,EAAU,SAACC,GAOb,IANA,IAAMC,EAAa,GACbC,EAAa,GACbC,EAAY,GACZC,EAAa,GACfC,EAAqBL,EAAUM,WAAWC,MAErCC,EAAI,EAAGA,EAAIH,EAAoBG,IACpCP,EAAWQ,KAAKC,WAAWV,EAAUzD,KAAKoE,IAAIH,GAAGxB,OACjDkB,EAAWO,KAAKC,WAAWV,EAAUzD,KAAKoE,IAAIH,GAAG5B,OACjDuB,EAAUM,KAAKC,WAAWV,EAAUzD,KAAKoE,IAAIH,GAAG3B,MAChDuB,EAAWK,KAAKT,EAAUzD,KAAKoE,IAAIH,GAAG9B,MAE1CU,EAAOe,GACPd,EAAQa,GACRZ,EAAQW,GACRV,EAAQa,GACRV,EAAWM,EAAUzD,KAAKqE,OAMxBC,EAAO,uCAAG,8BAAAC,EAAA,+EAEeC,MAAM,GAAD,OACrBlB,EADqB,oBACDL,EADC,2BAC2BM,IAH/C,UAEFkB,EAFE,OAKRvB,EAAa,IAEW,MAApBuB,EAASC,OAPL,sBAQE,IAAIC,MACN,8HATA,UAWuB,MAApBF,EAASC,OAXZ,uBAYE,IAAIC,MACN,8HAbA,yBAgBoBF,EAASG,OAhB7B,QAgBEC,EAhBF,OAiBJrB,EAAQqB,GAjBJ,0DAoBRC,OAAOC,MAAP,MApBQ,0DAAH,qDAwBPC,EAAc,uCAAG,8BAAAT,EAAA,sEAGKC,MAAM,GAAD,OACtBlB,EADsB,oBACFL,EADE,uCACsCM,IAJhD,cAGb0B,EAHa,gBAMMA,EAAUL,OANhB,OAMbM,EANa,OASnB7B,EAAS6B,GATU,2CAAH,qDAiBpB,OACI,sBAAKlD,UAAU,MAAf,UACI,sBAAMmD,SARO,SAACC,GAClBA,EAAEC,iBACFf,IACAU,KAKI,SACI,uBACI5D,KAAK,OACLkE,YAAY,wBACZC,SAAU,SAACH,GACPA,EAAEC,iBACFnC,EAAakC,EAAEI,cAAcC,MAAMC,gBAEvC1D,UAAU,gBAIlB,cAAC,EAAD,CAAQhC,KAAMoD,EAAOrB,QAASA,IACV,IAAnBA,EAAQE,OACL,sBAAKD,UAAU,eAAf,UACI,cAAC,EAAD,CACInC,SAAUyC,EACVxC,UAAWuC,EACXzC,UAAW6C,EACX1C,UAAWoC,EACXH,UAAU,cAEd,cAAC,EAAD,CACInC,SAAUyC,EACVxC,UAAWuC,EACXzC,UAAW6C,EACX1C,UAAWoC,EACXH,UAAU,iBAGlB,UC7GhB2D,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.80481beb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst BarChart = ({ data_open, data_low, data_high, data_date }) => {\r\n    return (\r\n        <div>\r\n            <Line\r\n                data={{\r\n                    labels: data_date,\r\n                    datasets: [\r\n                        {\r\n                            label: \"open\",\r\n                            data: data_open,\r\n                            borderColor: \"#17B890\",\r\n                            backgroundColor: \"#17b89021\",\r\n                        },\r\n                        {\r\n                            label: \"Low\",\r\n                            data: data_low,\r\n                            borderColor: \"#FF5964\",\r\n                            backgroundColor: \"#FF596421\",\r\n                        },\r\n                        {\r\n                            label: \"High\",\r\n                            data: data_high,\r\n                            borderColor: \"#FFE74C\",\r\n                            backgroundColor: \"#FFE74C21\",\r\n                        },\r\n                    ],\r\n                }}\r\n                height={600}\r\n                width={400}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    layout: {\r\n                        padding: {\r\n                            left: 0,\r\n                            right: 25,\r\n                            top: 100,\r\n                            bottom: 100,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        position: \"bottom\",\r\n                        labels: {\r\n                            padding: 30,\r\n                        },\r\n                    },\r\n                    scales: {\r\n                        xAxes: [\r\n                            {\r\n                                type: \"time\",\r\n                                time: {\r\n                                    displayFormats: {\r\n                                        quarter: \"MMM YYYY\",\r\n                                    },\r\n                                },\r\n                                ticks: {\r\n                                    fontColor: \"#F5F3F4gg\",\r\n                                    fontSize: \"12\",\r\n                                },\r\n                            },\r\n                        ],\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    fontColor: \"#F5F3F4gg\",\r\n                                    fontSize: \"12\",\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nconst RadarChart = ({ data_open, data_low, data_high, data_date }) => {\r\n    return (\r\n        <div>\r\n            <Bar\r\n                data={{\r\n                    labels: [1, 20, 40, 60, 80, 100],\r\n                    datasets: [\r\n                        {\r\n                            label: \"open\",\r\n                            data: [\r\n                                data_open[99],\r\n                                data_open[79],\r\n                                data_open[59],\r\n                                data_open[39],\r\n                                data_open[19],\r\n                                data_open[0],\r\n                            ],\r\n                            borderColor: \"#17B890\",\r\n                            borderWidth: 2,\r\n                            backgroundColor: \"#17B89021\",\r\n                        },\r\n                        {\r\n                            label: \"Low\",\r\n                            data: [\r\n                                data_low[99],\r\n                                data_low[79],\r\n                                data_low[59],\r\n                                data_low[39],\r\n                                data_low[19],\r\n                                data_low[0],\r\n                            ],\r\n                            borderColor: \"#FF5964\",\r\n                            borderWidth: 2,\r\n                            backgroundColor: \"#FF596421\",\r\n                        },\r\n                        {\r\n                            label: \"High\",\r\n                            data: [\r\n                                data_high[99],\r\n                                data_high[79],\r\n                                data_high[59],\r\n                                data_high[39],\r\n                                data_high[19],\r\n                                data_high[0],\r\n                            ],\r\n                            borderColor: \"#FFE74C\",\r\n                            borderWidth: 2,\r\n                            backgroundColor: \"#FFE74C21\",\r\n                        },\r\n                    ],\r\n                }}\r\n                height={600}\r\n                width={400}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n\r\n                    layout: {\r\n                        padding: {\r\n                            left: 25,\r\n                            right: 0,\r\n                            top: 100,\r\n                            bottom: 100,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        position: \"bottom\",\r\n                        labels: {\r\n                            padding: 30,\r\n                        },\r\n                    },\r\n                    scales: {\r\n                        xAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    fontColor: \"#F5F3F4gg\",\r\n                                    fontSize: \"12\",\r\n                                },\r\n                            },\r\n                        ],\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    fontColor: \"#F5F3F4gg\",\r\n                                    fontSize: \"12\",\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RadarChart;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport Moment from \"react-moment\";\r\nconst Header = ({ data, company }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {company.length !== 0 ? (\r\n                <div className=\"wrapper\">\r\n                    <h1 className=\"symbol\">{company}</h1>\r\n                    <div className=\"box\">\r\n                        <div className=\"boxLeft\">\r\n                            <p>\r\n                                Date:{\" \"}\r\n                                <span>\r\n                                    <Moment format=\"YYYY/MM/DD\">\r\n                                        {data.date}\r\n                                    </Moment>\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                Exchange: <span>{data.exchange}</span>\r\n                            </p>\r\n                            <p>\r\n                                High: <span>${data.high}</span>\r\n                            </p>\r\n                            <p>\r\n                                Low: <span>${data.low}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"boxRight\">\r\n                            <p>\r\n                                Close: <span>${data.close}</span>\r\n                            </p>\r\n\r\n                            <p>\r\n                                Last: <span>${data.last}</span>\r\n                            </p>\r\n                            <p>\r\n                                Open: <span>${data.open}</span>\r\n                            </p>\r\n\r\n                            <p>\r\n                                Volume: <span>{data.volume}</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <h1 className=\"report\">\r\n                    Please enter NASDAQ symbol to generate result\r\n                </h1>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\nimport BarChart from \"./components/BarChart\";\nimport RadarChart from \"./components/RadarChart\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\nconst App = () => {\n    const [low, setLow] = useState([]);\n    const [high, setHigh] = useState([]);\n    const [open, setOpen] = useState([]);\n    const [date, setDate] = useState([]);\n    const [userInput, setUserInput] = useState(\"\");\n    const [company, setCompany] = useState([]);\n    const [other, setOther] = useState([]);\n    const Base_url = \"http://api.marketstack.com/v1\";\n    const key = \"0469640507c513d9311110af33d220a6\";\n\n    const getData = (json_data) => {\n        const stock_open = [];\n        const stock_high = [];\n        const stock_low = [];\n        const stock_date = [];\n        var static_num_vaibhav = json_data.pagination.count;\n\n        for (var i = 0; i < static_num_vaibhav; i++) {\n            stock_open.push(parseFloat(json_data.data.eod[i].open));\n            stock_high.push(parseFloat(json_data.data.eod[i].high));\n            stock_low.push(parseFloat(json_data.data.eod[i].low));\n            stock_date.push(json_data.data.eod[i].date);\n        }\n        setLow(stock_low);\n        setHigh(stock_high);\n        setOpen(stock_open);\n        setDate(stock_date);\n        setCompany(json_data.data.name);\n    };\n\n    //`${Base_url}/eod?access_key=${key}&symbols=${userInput}`\n    //http://api.marketstack.com/v1/tickers/AMZN/eod?access_key=0469640507c513d9311110af33d220a6\n\n    const callAPI = async () => {\n        try {\n            const response = await fetch(\n                `${Base_url}/tickers/${userInput}/eod?access_key=${key}`\n            );\n            setUserInput(\"\");\n\n            if (response.status === 422) {\n                throw new Error(\n                    \"It seems that entered NASDAQ\\n Stock Exchange symbol Doesnot exist\\n please enter NASDAQ key again\\n eg. amzn, aapl, intl \"\n                );\n            } else if (response.status === 404) {\n                throw new Error(\n                    \"It seems that entered NASDAQ\\n Stock Exchange symbol Doesnot exist\\n please enter NASDAQ key again\\n eg. amzn, aapl, intl \"\n                );\n            } else {\n                const data_json = await response.json();\n                getData(data_json);\n            }\n        } catch (error) {\n            window.alert(error);\n        }\n    };\n\n    const callAPI_header = async () => {\n        //http://api.marketstack.com/v1/tickers/AAPL/intraday/latest?access_key=0469640507c513d9311110af33d220a6\n\n        const response2 = await fetch(\n            `${Base_url}/tickers/${userInput}/intraday/latest?access_key=${key}`\n        );\n        const data_json2 = await response2.json();\n        //other_array.push(data_json2);\n\n        setOther(data_json2);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        callAPI();\n        callAPI_header();\n    };\n\n    return (\n        <div className=\"app\">\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter NASDAQ eg. amzn\"\n                    onChange={(e) => {\n                        e.preventDefault();\n                        setUserInput(e.currentTarget.value.toUpperCase());\n                    }}\n                    className=\"dataInput\"\n                />\n            </form>\n\n            <Header data={other} company={company} />\n            {company.length !== 0 ? (\n                <div className=\"displayChart\">\n                    <BarChart\n                        data_low={low}\n                        data_high={high}\n                        data_open={open}\n                        data_date={date}\n                        className=\"lineChart\"\n                    />\n                    <RadarChart\n                        data_low={low}\n                        data_high={high}\n                        data_open={open}\n                        data_date={date}\n                        className=\"lineChart\"\n                    />\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default App;\n\n//useEffect(async () => {\n//   const response = await fetch(\n//     `${Base_url}/eod?access_key=${key}&symbols=AMZN`\n//   );\n//  const json_data = await response.json();\n//  getData(json_data);\n//}, [count]);\n\n//for (var i = 0; i < static_num_vaibhav; i++) {\n//   stock_open.push(parseFloat(json_data.data[i].open));\n//   stock_high.push(parseFloat(json_data.data[i].high));\n//   stock_low.push(parseFloat(json_data.data[i].low));\n//    stock_date.push(json_data.data[i].date);\n//}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}